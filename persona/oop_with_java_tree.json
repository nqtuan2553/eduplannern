{
    "ability_tree": {
      "target_knowledge": "Lập trình hướng đối tượng với Java",
      "total_score": 25,
      "ability": [
        {
          "Name": "Cú pháp và ngữ nghĩa Java",
          "Score": [
            {
              "score": 1,
              "Description": "Biết các khái niệm cơ bản như kiểu dữ liệu, biến, câu lệnh điều kiện và vòng lặp, nhưng còn chậm và hay mắc lỗi cú pháp."
            },
            {
              "score": 2,
              "Description": "Có thể viết chương trình Java đơn giản với cú pháp đúng, hiểu các cấu trúc điều khiển cơ bản."
            },
            {
              "score": 3,
              "Description": "Thành thạo cú pháp Java, bao gồm kiểu dữ liệu, vòng lặp, mảng, xử lý ngoại lệ và cấu trúc điều khiển nâng cao."
            },
            {
              "score": 4,
              "Description": "Có thể sử dụng cú pháp Java một cách nhanh chóng và chính xác để xây dựng các chương trình phức tạp, áp dụng tốt các thư viện chuẩn."
            },
            {
              "score": 5,
              "Description": "Thành thạo toàn bộ cú pháp và ngữ nghĩa Java, có thể tối ưu mã nguồn, áp dụng kỹ thuật nâng cao."
            }
          ]
        },
        {
          "Name": "Các khái niệm về OOP",
          "Score": [
            {
              "score": 1,
              "Description": "Biết khái niệm lớp và đối tượng, nhưng chưa áp dụng được nguyên lý OOP vào giải quyết bài toán."
            },
            {
              "score": 2,
              "Description": "Hiểu các khái niệm cơ bản như đóng gói và kế thừa,... nhưng áp dụng còn hạn chế."
            },
            {
              "score": 3,
              "Description": "Có thể áp dụng các nguyên lý OOP (đóng gói, kế thừa, đa hình, trừu tượng) để giải quyết bài toán cơ bản."
            },
            {
              "score": 4,
              "Description": "Thành thạo áp dụng các nguyên lý OOP để thiết kế hệ thống phần mềm tầm trung và có khả năng tái sử dụng mã nguồn."
            },
            {
              "score": 5,
              "Description": "Hiểu sâu nguyên lý OOP và các mẫu thiết kế (design patterns), có thể xây dựng hệ thống phần mềm phức tạp, dễ bảo trì và mở rộng."
            }
          ]
        },
        {
          "Name": "Giải quyết vấn đề & Thiết kế",
          "Score": [
            {
              "score": 1,
              "Description": "Có thể giải quyết các bài toán đơn giản với hướng dẫn cụ thể, nhưng chưa tự thiết kế được giải pháp."
            },
            {
              "score": 2,
              "Description": "Có thể phân tích yêu cầu và đề xuất giải pháp cơ bản, nhưng thiếu cấu trúc và tối ưu."
            },
            {
              "score": 3,
              "Description": "Có khả năng thiết kế và cài đặt giải pháp OOP cho các bài toán ở mức độ trung bình."
            },
            {
              "score": 4,
              "Description": "Có khả năng thiết kế giải pháp phần mềm phức tạp, phân tách module hợp lý."
            },
            {
              "score": 5,
              "Description": "Có tư duy hệ thống, thiết kế giải pháp hiệu quả cho các bài toán phức tạp, tuân thủ nguyên tắc thiết kế phần mềm."
            }
          ]
        },
        {
          "Name": "Gỡ lỗi & Kiểm thử",
          "Score": [
            {
              "score": 1,
              "Description": "Có thể tìm và sửa các lỗi cú pháp đơn giản."
            },
            {
              "score": 2,
              "Description": "Có thể phát hiện và sửa lỗi logic cơ bản, hiểu khái niệm kiểm thử."
            },
            {
              "score": 3,
              "Description": "Có khả năng sử dụng công cụ debug và viết test case cơ bản bằng JUnit."
            },
            {
              "score": 4,
              "Description": "Thành thạo sử dụng các công cụ debug, tối ưu mã và áp dụng kiểm thử cho nhiều trường hợp."
            },
            {
              "score": 5,
              "Description": "Có khả năng xây dựng bộ kiểm thử tự động, phân tích và tối ưu hiệu năng ứng dụng một cách chuyên nghiệp."
            }
          ]
        },
        {
          "Name": "Mô hình hóa bằng UML",
          "Score": [
            {
              "score": 1,
              "Description": "Biết khái niệm UML và có thể đọc sơ đồ lớp đơn giản."
            },
            {
              "score": 2,
              "Description": "Có thể vẽ sơ đồ lớp và use case cơ bản cho một bài toán nhỏ."
            },
            {
              "score": 3,
              "Description": "Vẽ thành thạo sơ đồ lớp, use case, sequence cho hệ thống tầm trung."
            },
            {
              "score": 4,
              "Description": "Có thể thiết kế đầy đủ sơ đồ UML cho hệ thống phức tạp, áp dụng đúng chuẩn ký hiệu UML."
            },
            {
              "score": 5,
              "Description": " Kết hợp UML vào quy trình phát triển phần mềm chuyên nghiệp, có khả năng tối ưu và chuyển đổi từ mô hình sang mã nguồn."
            }
          ]
        }
      ]
    }
}